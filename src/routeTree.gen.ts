/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as SearchResultsImport } from './routes/search/results'
import { Route as ProfileIdImport } from './routes/profile/$id'

// Create Virtual Routes

const SummaryIndexLazyImport = createFileRoute('/summary/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SummaryIndexLazyRoute = SummaryIndexLazyImport.update({
  path: '/summary/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/summary/index.lazy').then((d) => d.Route))

const SearchIndexRoute = SearchIndexImport.update({
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any)

const SearchResultsRoute = SearchResultsImport.update({
  path: '/search/results',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/search/results': {
      id: '/search/results'
      path: '/search/results'
      fullPath: '/search/results'
      preLoaderRoute: typeof SearchResultsImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/summary/': {
      id: '/summary/'
      path: '/summary'
      fullPath: '/summary'
      preLoaderRoute: typeof SummaryIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ProfileIdRoute,
  SearchResultsRoute,
  SearchIndexRoute,
  SummaryIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile/$id",
        "/search/results",
        "/search/",
        "/summary/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile/$id": {
      "filePath": "profile/$id.tsx"
    },
    "/search/results": {
      "filePath": "search/results.tsx"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/summary/": {
      "filePath": "summary/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
